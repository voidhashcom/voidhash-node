/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from "../../../client.ts";
import type { RequestConfig, ResponseErrorConfig } from "../../../client.ts";
import type {
	GetProductsByProductIdProviderProductsQueryResponse,
	GetProductsByProductIdProviderProductsPathParams,
} from "../../models.ts";

function getGetProductsByProductIdProviderProductsUrl({
	productId,
}: {
	productId: GetProductsByProductIdProviderProductsPathParams["productId"];
}) {
	return `/products/${productId}/provider-products` as const;
}

/**
 * @description Get all provider products for a product
 * {@link /products/:productId/provider-products}
 */
export async function getProductsByProductIdProviderProducts(
	{
		productId,
	}: {
		productId: GetProductsByProductIdProviderProductsPathParams["productId"];
	},
	config: Partial<RequestConfig> & { client?: typeof client } = {},
) {
	const { client: request = client, ...requestConfig } = config;

	const res = await request<
		GetProductsByProductIdProviderProductsQueryResponse,
		ResponseErrorConfig<Error>,
		unknown
	>({
		method: "GET",
		url: getGetProductsByProductIdProviderProductsUrl({ productId }).toString(),
		...requestConfig,
	});
	return res.data;
}

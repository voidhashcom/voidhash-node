/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from "../../../client.ts";
import type { RequestConfig, ResponseErrorConfig } from "../../../client.ts";
import type {
	GetProductByIdQueryResponse,
	GetProductByIdPathParams,
	GetProductById400,
	GetProductById401,
	GetProductById403,
	GetProductById404,
	GetProductById409,
	GetProductById412,
	GetProductById429,
	GetProductById500,
} from "../../models.ts";

function getGetProductByIdUrl({
	productId,
}: { productId: GetProductByIdPathParams["productId"] }) {
	return `/products/${productId}` as const;
}

/**
 * @description Get a product
 * {@link /products/:productId}
 */
export async function getProductById(
	{ productId }: { productId: GetProductByIdPathParams["productId"] },
	config: Partial<RequestConfig> & { client?: typeof client } = {},
) {
	const { client: request = client, ...requestConfig } = config;

	const res = await request<
		GetProductByIdQueryResponse,
		ResponseErrorConfig<
			| GetProductById400
			| GetProductById401
			| GetProductById403
			| GetProductById404
			| GetProductById409
			| GetProductById412
			| GetProductById429
			| GetProductById500
		>,
		unknown
	>({
		method: "GET",
		url: getGetProductByIdUrl({ productId }).toString(),
		...requestConfig,
	});
	return res.data;
}

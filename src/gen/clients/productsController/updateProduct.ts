/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from "../../../client.ts";
import type { RequestConfig, ResponseErrorConfig } from "../../../client.ts";
import type {
	UpdateProductMutationRequest,
	UpdateProductMutationResponse,
	UpdateProductPathParams,
	UpdateProduct400,
	UpdateProduct401,
	UpdateProduct403,
	UpdateProduct404,
	UpdateProduct409,
	UpdateProduct412,
	UpdateProduct429,
	UpdateProduct500,
} from "../../models.ts";

function getUpdateProductUrl({
	productId,
}: { productId: UpdateProductPathParams["productId"] }) {
	return `/products/${productId}` as const;
}

/**
 * @description Update a product
 * {@link /products/:productId}
 */
export async function updateProduct(
	{ productId }: { productId: UpdateProductPathParams["productId"] },
	data: UpdateProductMutationRequest,
	config: Partial<RequestConfig<UpdateProductMutationRequest>> & {
		client?: typeof client;
	} = {},
) {
	const { client: request = client, ...requestConfig } = config;

	const res = await request<
		UpdateProductMutationResponse,
		ResponseErrorConfig<
			| UpdateProduct400
			| UpdateProduct401
			| UpdateProduct403
			| UpdateProduct404
			| UpdateProduct409
			| UpdateProduct412
			| UpdateProduct429
			| UpdateProduct500
		>,
		UpdateProductMutationRequest
	>({
		method: "PUT",
		url: getUpdateProductUrl({ productId }).toString(),
		data,
		...requestConfig,
	});
	return res.data;
}

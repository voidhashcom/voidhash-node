/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from "../../../client.ts";
import type { RequestConfig, ResponseErrorConfig } from "../../../client.ts";
import type {
	AttachProviderProductMutationRequest,
	AttachProviderProductMutationResponse,
	AttachProviderProductPathParams,
	AttachProviderProduct400,
	AttachProviderProduct401,
	AttachProviderProduct403,
	AttachProviderProduct404,
	AttachProviderProduct409,
	AttachProviderProduct412,
	AttachProviderProduct429,
	AttachProviderProduct500,
} from "../../models.ts";

function getAttachProviderProductUrl({
	productId,
}: { productId: AttachProviderProductPathParams["productId"] }) {
	return `/products/${productId}/provider-products` as const;
}

/**
 * @description Attach a new provider product
 * {@link /products/:productId/provider-products}
 */
export async function attachProviderProduct(
	{ productId }: { productId: AttachProviderProductPathParams["productId"] },
	data?: AttachProviderProductMutationRequest,
	config: Partial<RequestConfig<AttachProviderProductMutationRequest>> & {
		client?: typeof client;
	} = {},
) {
	const { client: request = client, ...requestConfig } = config;

	const res = await request<
		AttachProviderProductMutationResponse,
		ResponseErrorConfig<
			| AttachProviderProduct400
			| AttachProviderProduct401
			| AttachProviderProduct403
			| AttachProviderProduct404
			| AttachProviderProduct409
			| AttachProviderProduct412
			| AttachProviderProduct429
			| AttachProviderProduct500
		>,
		AttachProviderProductMutationRequest
	>({
		method: "POST",
		url: getAttachProviderProductUrl({ productId }).toString(),
		data,
		...requestConfig,
	});
	return res.data;
}

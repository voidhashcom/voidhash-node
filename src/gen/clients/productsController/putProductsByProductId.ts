/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from "../../../client.ts";
import type { RequestConfig, ResponseErrorConfig } from "../../../client.ts";
import type {
	PutProductsByProductIdMutationRequest,
	PutProductsByProductIdMutationResponse,
	PutProductsByProductIdPathParams,
} from "../../models.ts";

function getPutProductsByProductIdUrl({
	productId,
}: { productId: PutProductsByProductIdPathParams["productId"] }) {
	return `/products/${productId}` as const;
}

/**
 * @description Update a product
 * {@link /products/:productId}
 */
export async function putProductsByProductId(
	{ productId }: { productId: PutProductsByProductIdPathParams["productId"] },
	data: PutProductsByProductIdMutationRequest,
	config: Partial<RequestConfig<PutProductsByProductIdMutationRequest>> & {
		client?: typeof client;
	} = {},
) {
	const { client: request = client, ...requestConfig } = config;

	const res = await request<
		PutProductsByProductIdMutationResponse,
		ResponseErrorConfig<Error>,
		PutProductsByProductIdMutationRequest
	>({
		method: "PUT",
		url: getPutProductsByProductIdUrl({ productId }).toString(),
		data,
		...requestConfig,
	});
	return res.data;
}

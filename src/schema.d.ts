/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/v1/customers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description List customers */
        get: operations["getV1Customers"];
        put?: never;
        /** @description Create a new customer */
        post: operations["postV1Customers"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/paywalls": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description List paywalls */
        get: operations["getV1Paywalls"];
        put?: never;
        /** @description Create a new paywall */
        post: operations["postV1Paywalls"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/paywalls/{paywallId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Get a paywall */
        get: operations["getV1PaywallsByPaywallId"];
        put?: never;
        post?: never;
        /** @description Delete a paywall */
        delete: operations["deleteV1PaywallsByPaywallId"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/paywalls/{paywallId}/products": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Get all products for a paywall */
        get: operations["getV1PaywallsByPaywallIdProducts"];
        put?: never;
        /** @description Attach a product to a paywall */
        post: operations["postV1PaywallsByPaywallIdProducts"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/paywalls/{paywallId}/products/{productId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** @description Remove a product from a paywall */
        delete: operations["deleteV1PaywallsByPaywallIdProductsByProductId"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/products": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description List products */
        get: operations["getV1Products"];
        put?: never;
        /** @description Create a new product */
        post: operations["postV1Products"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/products/{productId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Get a product */
        get: operations["getV1ProductsByProductId"];
        /** @description Update a product */
        put: operations["putV1ProductsByProductId"];
        post?: never;
        /** @description Delete a product */
        delete: operations["deleteV1ProductsByProductId"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/products/{productId}/provider-products": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Get all provider products for a product */
        get: operations["getV1ProductsByProductIdProvider-products"];
        put?: never;
        /** @description Attach a new provider product */
        post: operations["postV1ProductsByProductIdProvider-products"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/products/{productId}/provider-products/{providerId}/{providerProductKey}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** @description Update a provider product */
        put: operations["putV1ProductsByProductIdProvider-productsByProviderIdByProviderProductKey"];
        post?: never;
        /** @description Delete a provider product */
        delete: operations["deleteV1ProductsByProductIdProvider-productsByProviderIdByProviderProductKey"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: never;
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    getV1Customers: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        customerId: string;
                        name: string | null;
                        email: string | null;
                    }[];
                };
            };
        };
    };
    postV1Customers: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /** Format: email */
                    email: string;
                    name?: string;
                };
            };
        };
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        customerId: string;
                        name: string | null;
                        email: string | null;
                    };
                };
            };
        };
    };
    getV1Paywalls: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        paywallId: string;
                        name: string;
                    }[];
                };
            };
        };
    };
    postV1Paywalls: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    name: string;
                };
            };
        };
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        paywallId: string;
                        name: string;
                    };
                };
            };
        };
    };
    getV1PaywallsByPaywallId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                paywallId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        paywallId: string;
                        name: string;
                    };
                };
            };
        };
    };
    deleteV1PaywallsByPaywallId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                paywallId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                    };
                };
            };
        };
    };
    getV1PaywallsByPaywallIdProducts: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                paywallId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        paywallId: string;
                        productId: string;
                        productName: string | null;
                    }[];
                };
            };
        };
    };
    postV1PaywallsByPaywallIdProducts: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                paywallId: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    productId: string;
                };
            };
        };
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        paywallId: string;
                        productId: string;
                        productName: string | null;
                    };
                };
            };
        };
    };
    deleteV1PaywallsByPaywallIdProductsByProductId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                paywallId: string;
                productId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getV1Products: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        productId: string;
                        name: string;
                    }[];
                };
            };
        };
    };
    postV1Products: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    name: string;
                };
            };
        };
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        customerId: string;
                        name: string | null;
                        email: string | null;
                    };
                };
            };
        };
    };
    getV1ProductsByProductId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                productId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        productId: string;
                        name: string;
                    };
                };
            };
        };
    };
    putV1ProductsByProductId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                productId: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    name: string;
                };
            };
        };
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        productId: string;
                        name: string;
                    };
                };
            };
        };
    };
    deleteV1ProductsByProductId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                productId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                    };
                };
            };
        };
    };
    "getV1ProductsByProductIdProvider-products": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                productId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        providerProductId: string;
                        providerConfiguration: {
                            /** @constant */
                            providerId: "stripe";
                            configuration: {
                                productId: string;
                                priceId: string;
                            };
                        } | {
                            /** @constant */
                            providerId: "app-store";
                            configuration: {
                                productId: string;
                            };
                        };
                    }[];
                };
            };
        };
    };
    "postV1ProductsByProductIdProvider-products": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                productId: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /** @constant */
                    providerId: "stripe";
                    configuration: {
                        productId: string;
                        priceId: string;
                    };
                } | {
                    /** @constant */
                    providerId: "app-store";
                    configuration: {
                        productId: string;
                    };
                };
            };
        };
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        providerProductId: string;
                        providerConfiguration: {
                            /** @constant */
                            providerId: "stripe";
                            configuration: {
                                productId: string;
                                priceId: string;
                            };
                        } | {
                            /** @constant */
                            providerId: "app-store";
                            configuration: {
                                productId: string;
                            };
                        };
                    };
                };
            };
        };
    };
    "putV1ProductsByProductIdProvider-productsByProviderIdByProviderProductKey": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                productId: string;
                providerId: string;
                providerProductKey: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    configuration: {
                        /** @constant */
                        providerId: "stripe";
                        configuration: {
                            productId: string;
                            priceId: string;
                        };
                    } | {
                        /** @constant */
                        providerId: "app-store";
                        configuration: {
                            productId: string;
                        };
                    };
                };
            };
        };
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        providerProductId: string;
                        providerConfiguration: {
                            /** @constant */
                            providerId: "stripe";
                            configuration: {
                                productId: string;
                                priceId: string;
                            };
                        } | {
                            /** @constant */
                            providerId: "app-store";
                            configuration: {
                                productId: string;
                            };
                        };
                    };
                };
            };
        };
    };
    "deleteV1ProductsByProductIdProvider-productsByProviderIdByProviderProductKey": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                productId: string;
                providerId: string;
                providerProductKey: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
